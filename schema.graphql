type Feed @entity(immutable: true) {
  id: ID!
  type: String!

  timestamp: BigInt!
  txHash: Bytes!

  tree: Tree

  # Added / Withdraw
  owner: Owner

  # Transferred
  from: Owner
  to: Owner

  # Audited
  auditor: Auditor
  report: Report
}

type Report @entity(immutable: true) {
  id: ID!
  auditor: Auditor!
  tree: Tree!
  treeNumber: BigInt! # uint256
  timestamp: BigInt!
  transactionHash: Bytes!
}

type Tree @entity {
  id: ID!
  owner: Owner! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  nft: NFT!
  treeNumber: BigInt! # uint256
  isActive: Boolean!

  reports: [Report!]! @derivedFrom(field: "tree")
  reportCount: BigInt!

  createdAt: BigInt!
  createdTxHash: Bytes!
  updatedAt: BigInt!
  updatedTxHash: Bytes!
}

type Owner @entity {
  id: Bytes! # Use bytes as ID
  ownedTrees: [Tree!]! @derivedFrom(field: "owner")
  totalTrees: BigInt!
  auditedTrees: BigInt!
  isAuditor: Boolean!
}

type Auditor @entity {
  id: Bytes! # Use bytes as ID
  isActive: Boolean!
  auditReports: [Report!]! @derivedFrom(field: "auditor")
}

type NFT @entity {
  id: ID! # Use bytes as ID
  tokenUri: String!
}

type App @entity {
  id: ID!
  totalTrees: BigInt!
  auditedTrees: BigInt!
}
